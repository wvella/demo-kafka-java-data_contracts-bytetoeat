/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.confluent.wvella.demo.datacontractsv1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Recipe extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7084496580621110325L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Recipe\",\"namespace\":\"io.confluent.wvella.demo.datacontractsv1\",\"fields\":[{\"name\":\"event_id\",\"type\":\"string\"},{\"name\":\"recipe_id\",\"type\":\"string\"},{\"name\":\"chef_name\",\"type\":\"string\"},{\"name\":\"recipe_name\",\"type\":\"string\"},{\"name\":\"ingredients\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Ingredient\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"unit\",\"type\":\"string\"}]}}},{\"name\":\"cook_time_minutes\",\"type\":\"int\"},{\"name\":\"spice_level\",\"type\":{\"type\":\"enum\",\"name\":\"SpiceLevel\",\"symbols\":[\"mild\",\"medium\",\"hot\"]}},{\"name\":\"calories\",\"type\":\"int\"},{\"name\":\"created_at\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"steps\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<Recipe> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Recipe> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Recipe> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Recipe> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Recipe> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Recipe to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Recipe from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Recipe instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Recipe fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence event_id;
  private java.lang.CharSequence recipe_id;
  private java.lang.CharSequence chef_name;
  private java.lang.CharSequence recipe_name;
  private java.util.List<io.confluent.wvella.demo.datacontractsv1.Ingredient> ingredients;
  private int cook_time_minutes;
  private io.confluent.wvella.demo.datacontractsv1.SpiceLevel spice_level;
  private int calories;
  private java.time.Instant created_at;
  private java.util.List<java.lang.CharSequence> steps;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Recipe() {}

  /**
   * All-args constructor.
   * @param event_id The new value for event_id
   * @param recipe_id The new value for recipe_id
   * @param chef_name The new value for chef_name
   * @param recipe_name The new value for recipe_name
   * @param ingredients The new value for ingredients
   * @param cook_time_minutes The new value for cook_time_minutes
   * @param spice_level The new value for spice_level
   * @param calories The new value for calories
   * @param created_at The new value for created_at
   * @param steps The new value for steps
   */
  public Recipe(java.lang.CharSequence event_id, java.lang.CharSequence recipe_id, java.lang.CharSequence chef_name, java.lang.CharSequence recipe_name, java.util.List<io.confluent.wvella.demo.datacontractsv1.Ingredient> ingredients, java.lang.Integer cook_time_minutes, io.confluent.wvella.demo.datacontractsv1.SpiceLevel spice_level, java.lang.Integer calories, java.time.Instant created_at, java.util.List<java.lang.CharSequence> steps) {
    this.event_id = event_id;
    this.recipe_id = recipe_id;
    this.chef_name = chef_name;
    this.recipe_name = recipe_name;
    this.ingredients = ingredients;
    this.cook_time_minutes = cook_time_minutes;
    this.spice_level = spice_level;
    this.calories = calories;
    this.created_at = created_at.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.steps = steps;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return event_id;
    case 1: return recipe_id;
    case 2: return chef_name;
    case 3: return recipe_name;
    case 4: return ingredients;
    case 5: return cook_time_minutes;
    case 6: return spice_level;
    case 7: return calories;
    case 8: return created_at;
    case 9: return steps;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: event_id = (java.lang.CharSequence)value$; break;
    case 1: recipe_id = (java.lang.CharSequence)value$; break;
    case 2: chef_name = (java.lang.CharSequence)value$; break;
    case 3: recipe_name = (java.lang.CharSequence)value$; break;
    case 4: ingredients = (java.util.List<io.confluent.wvella.demo.datacontractsv1.Ingredient>)value$; break;
    case 5: cook_time_minutes = (java.lang.Integer)value$; break;
    case 6: spice_level = (io.confluent.wvella.demo.datacontractsv1.SpiceLevel)value$; break;
    case 7: calories = (java.lang.Integer)value$; break;
    case 8: created_at = (java.time.Instant)value$; break;
    case 9: steps = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'event_id' field.
   * @return The value of the 'event_id' field.
   */
  public java.lang.CharSequence getEventId() {
    return event_id;
  }


  /**
   * Sets the value of the 'event_id' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.CharSequence value) {
    this.event_id = value;
  }

  /**
   * Gets the value of the 'recipe_id' field.
   * @return The value of the 'recipe_id' field.
   */
  public java.lang.CharSequence getRecipeId() {
    return recipe_id;
  }


  /**
   * Sets the value of the 'recipe_id' field.
   * @param value the value to set.
   */
  public void setRecipeId(java.lang.CharSequence value) {
    this.recipe_id = value;
  }

  /**
   * Gets the value of the 'chef_name' field.
   * @return The value of the 'chef_name' field.
   */
  public java.lang.CharSequence getChefName() {
    return chef_name;
  }


  /**
   * Sets the value of the 'chef_name' field.
   * @param value the value to set.
   */
  public void setChefName(java.lang.CharSequence value) {
    this.chef_name = value;
  }

  /**
   * Gets the value of the 'recipe_name' field.
   * @return The value of the 'recipe_name' field.
   */
  public java.lang.CharSequence getRecipeName() {
    return recipe_name;
  }


  /**
   * Sets the value of the 'recipe_name' field.
   * @param value the value to set.
   */
  public void setRecipeName(java.lang.CharSequence value) {
    this.recipe_name = value;
  }

  /**
   * Gets the value of the 'ingredients' field.
   * @return The value of the 'ingredients' field.
   */
  public java.util.List<io.confluent.wvella.demo.datacontractsv1.Ingredient> getIngredients() {
    return ingredients;
  }


  /**
   * Sets the value of the 'ingredients' field.
   * @param value the value to set.
   */
  public void setIngredients(java.util.List<io.confluent.wvella.demo.datacontractsv1.Ingredient> value) {
    this.ingredients = value;
  }

  /**
   * Gets the value of the 'cook_time_minutes' field.
   * @return The value of the 'cook_time_minutes' field.
   */
  public int getCookTimeMinutes() {
    return cook_time_minutes;
  }


  /**
   * Sets the value of the 'cook_time_minutes' field.
   * @param value the value to set.
   */
  public void setCookTimeMinutes(int value) {
    this.cook_time_minutes = value;
  }

  /**
   * Gets the value of the 'spice_level' field.
   * @return The value of the 'spice_level' field.
   */
  public io.confluent.wvella.demo.datacontractsv1.SpiceLevel getSpiceLevel() {
    return spice_level;
  }


  /**
   * Sets the value of the 'spice_level' field.
   * @param value the value to set.
   */
  public void setSpiceLevel(io.confluent.wvella.demo.datacontractsv1.SpiceLevel value) {
    this.spice_level = value;
  }

  /**
   * Gets the value of the 'calories' field.
   * @return The value of the 'calories' field.
   */
  public int getCalories() {
    return calories;
  }


  /**
   * Sets the value of the 'calories' field.
   * @param value the value to set.
   */
  public void setCalories(int value) {
    this.calories = value;
  }

  /**
   * Gets the value of the 'created_at' field.
   * @return The value of the 'created_at' field.
   */
  public java.time.Instant getCreatedAt() {
    return created_at;
  }


  /**
   * Sets the value of the 'created_at' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.created_at = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'steps' field.
   * @return The value of the 'steps' field.
   */
  public java.util.List<java.lang.CharSequence> getSteps() {
    return steps;
  }


  /**
   * Sets the value of the 'steps' field.
   * @param value the value to set.
   */
  public void setSteps(java.util.List<java.lang.CharSequence> value) {
    this.steps = value;
  }

  /**
   * Creates a new Recipe RecordBuilder.
   * @return A new Recipe RecordBuilder
   */
  public static io.confluent.wvella.demo.datacontractsv1.Recipe.Builder newBuilder() {
    return new io.confluent.wvella.demo.datacontractsv1.Recipe.Builder();
  }

  /**
   * Creates a new Recipe RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Recipe RecordBuilder
   */
  public static io.confluent.wvella.demo.datacontractsv1.Recipe.Builder newBuilder(io.confluent.wvella.demo.datacontractsv1.Recipe.Builder other) {
    if (other == null) {
      return new io.confluent.wvella.demo.datacontractsv1.Recipe.Builder();
    } else {
      return new io.confluent.wvella.demo.datacontractsv1.Recipe.Builder(other);
    }
  }

  /**
   * Creates a new Recipe RecordBuilder by copying an existing Recipe instance.
   * @param other The existing instance to copy.
   * @return A new Recipe RecordBuilder
   */
  public static io.confluent.wvella.demo.datacontractsv1.Recipe.Builder newBuilder(io.confluent.wvella.demo.datacontractsv1.Recipe other) {
    if (other == null) {
      return new io.confluent.wvella.demo.datacontractsv1.Recipe.Builder();
    } else {
      return new io.confluent.wvella.demo.datacontractsv1.Recipe.Builder(other);
    }
  }

  /**
   * RecordBuilder for Recipe instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Recipe>
    implements org.apache.avro.data.RecordBuilder<Recipe> {

    private java.lang.CharSequence event_id;
    private java.lang.CharSequence recipe_id;
    private java.lang.CharSequence chef_name;
    private java.lang.CharSequence recipe_name;
    private java.util.List<io.confluent.wvella.demo.datacontractsv1.Ingredient> ingredients;
    private int cook_time_minutes;
    private io.confluent.wvella.demo.datacontractsv1.SpiceLevel spice_level;
    private int calories;
    private java.time.Instant created_at;
    private java.util.List<java.lang.CharSequence> steps;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.confluent.wvella.demo.datacontractsv1.Recipe.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.event_id)) {
        this.event_id = data().deepCopy(fields()[0].schema(), other.event_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.recipe_id)) {
        this.recipe_id = data().deepCopy(fields()[1].schema(), other.recipe_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.chef_name)) {
        this.chef_name = data().deepCopy(fields()[2].schema(), other.chef_name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.recipe_name)) {
        this.recipe_name = data().deepCopy(fields()[3].schema(), other.recipe_name);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.ingredients)) {
        this.ingredients = data().deepCopy(fields()[4].schema(), other.ingredients);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.cook_time_minutes)) {
        this.cook_time_minutes = data().deepCopy(fields()[5].schema(), other.cook_time_minutes);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.spice_level)) {
        this.spice_level = data().deepCopy(fields()[6].schema(), other.spice_level);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.calories)) {
        this.calories = data().deepCopy(fields()[7].schema(), other.calories);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.created_at)) {
        this.created_at = data().deepCopy(fields()[8].schema(), other.created_at);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.steps)) {
        this.steps = data().deepCopy(fields()[9].schema(), other.steps);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing Recipe instance
     * @param other The existing instance to copy.
     */
    private Builder(io.confluent.wvella.demo.datacontractsv1.Recipe other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.event_id)) {
        this.event_id = data().deepCopy(fields()[0].schema(), other.event_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.recipe_id)) {
        this.recipe_id = data().deepCopy(fields()[1].schema(), other.recipe_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.chef_name)) {
        this.chef_name = data().deepCopy(fields()[2].schema(), other.chef_name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.recipe_name)) {
        this.recipe_name = data().deepCopy(fields()[3].schema(), other.recipe_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ingredients)) {
        this.ingredients = data().deepCopy(fields()[4].schema(), other.ingredients);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cook_time_minutes)) {
        this.cook_time_minutes = data().deepCopy(fields()[5].schema(), other.cook_time_minutes);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.spice_level)) {
        this.spice_level = data().deepCopy(fields()[6].schema(), other.spice_level);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.calories)) {
        this.calories = data().deepCopy(fields()[7].schema(), other.calories);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.created_at)) {
        this.created_at = data().deepCopy(fields()[8].schema(), other.created_at);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.steps)) {
        this.steps = data().deepCopy(fields()[9].schema(), other.steps);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'event_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventId() {
      return event_id;
    }


    /**
      * Sets the value of the 'event_id' field.
      * @param value The value of 'event_id'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setEventId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.event_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'event_id' field has been set.
      * @return True if the 'event_id' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'event_id' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearEventId() {
      event_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'recipe_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getRecipeId() {
      return recipe_id;
    }


    /**
      * Sets the value of the 'recipe_id' field.
      * @param value The value of 'recipe_id'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setRecipeId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.recipe_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'recipe_id' field has been set.
      * @return True if the 'recipe_id' field has been set, false otherwise.
      */
    public boolean hasRecipeId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'recipe_id' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearRecipeId() {
      recipe_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'chef_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getChefName() {
      return chef_name;
    }


    /**
      * Sets the value of the 'chef_name' field.
      * @param value The value of 'chef_name'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setChefName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.chef_name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'chef_name' field has been set.
      * @return True if the 'chef_name' field has been set, false otherwise.
      */
    public boolean hasChefName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'chef_name' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearChefName() {
      chef_name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'recipe_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getRecipeName() {
      return recipe_name;
    }


    /**
      * Sets the value of the 'recipe_name' field.
      * @param value The value of 'recipe_name'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setRecipeName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.recipe_name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'recipe_name' field has been set.
      * @return True if the 'recipe_name' field has been set, false otherwise.
      */
    public boolean hasRecipeName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'recipe_name' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearRecipeName() {
      recipe_name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ingredients' field.
      * @return The value.
      */
    public java.util.List<io.confluent.wvella.demo.datacontractsv1.Ingredient> getIngredients() {
      return ingredients;
    }


    /**
      * Sets the value of the 'ingredients' field.
      * @param value The value of 'ingredients'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setIngredients(java.util.List<io.confluent.wvella.demo.datacontractsv1.Ingredient> value) {
      validate(fields()[4], value);
      this.ingredients = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ingredients' field has been set.
      * @return True if the 'ingredients' field has been set, false otherwise.
      */
    public boolean hasIngredients() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ingredients' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearIngredients() {
      ingredients = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'cook_time_minutes' field.
      * @return The value.
      */
    public int getCookTimeMinutes() {
      return cook_time_minutes;
    }


    /**
      * Sets the value of the 'cook_time_minutes' field.
      * @param value The value of 'cook_time_minutes'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setCookTimeMinutes(int value) {
      validate(fields()[5], value);
      this.cook_time_minutes = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'cook_time_minutes' field has been set.
      * @return True if the 'cook_time_minutes' field has been set, false otherwise.
      */
    public boolean hasCookTimeMinutes() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'cook_time_minutes' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearCookTimeMinutes() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'spice_level' field.
      * @return The value.
      */
    public io.confluent.wvella.demo.datacontractsv1.SpiceLevel getSpiceLevel() {
      return spice_level;
    }


    /**
      * Sets the value of the 'spice_level' field.
      * @param value The value of 'spice_level'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setSpiceLevel(io.confluent.wvella.demo.datacontractsv1.SpiceLevel value) {
      validate(fields()[6], value);
      this.spice_level = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'spice_level' field has been set.
      * @return True if the 'spice_level' field has been set, false otherwise.
      */
    public boolean hasSpiceLevel() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'spice_level' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearSpiceLevel() {
      spice_level = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'calories' field.
      * @return The value.
      */
    public int getCalories() {
      return calories;
    }


    /**
      * Sets the value of the 'calories' field.
      * @param value The value of 'calories'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setCalories(int value) {
      validate(fields()[7], value);
      this.calories = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'calories' field has been set.
      * @return True if the 'calories' field has been set, false otherwise.
      */
    public boolean hasCalories() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'calories' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearCalories() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_at' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return created_at;
    }


    /**
      * Sets the value of the 'created_at' field.
      * @param value The value of 'created_at'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[8], value);
      this.created_at = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'created_at' field has been set.
      * @return True if the 'created_at' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'created_at' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearCreatedAt() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'steps' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getSteps() {
      return steps;
    }


    /**
      * Sets the value of the 'steps' field.
      * @param value The value of 'steps'.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder setSteps(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[9], value);
      this.steps = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'steps' field has been set.
      * @return True if the 'steps' field has been set, false otherwise.
      */
    public boolean hasSteps() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'steps' field.
      * @return This builder.
      */
    public io.confluent.wvella.demo.datacontractsv1.Recipe.Builder clearSteps() {
      steps = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Recipe build() {
      try {
        Recipe record = new Recipe();
        record.event_id = fieldSetFlags()[0] ? this.event_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.recipe_id = fieldSetFlags()[1] ? this.recipe_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.chef_name = fieldSetFlags()[2] ? this.chef_name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.recipe_name = fieldSetFlags()[3] ? this.recipe_name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ingredients = fieldSetFlags()[4] ? this.ingredients : (java.util.List<io.confluent.wvella.demo.datacontractsv1.Ingredient>) defaultValue(fields()[4]);
        record.cook_time_minutes = fieldSetFlags()[5] ? this.cook_time_minutes : (java.lang.Integer) defaultValue(fields()[5]);
        record.spice_level = fieldSetFlags()[6] ? this.spice_level : (io.confluent.wvella.demo.datacontractsv1.SpiceLevel) defaultValue(fields()[6]);
        record.calories = fieldSetFlags()[7] ? this.calories : (java.lang.Integer) defaultValue(fields()[7]);
        record.created_at = fieldSetFlags()[8] ? this.created_at : (java.time.Instant) defaultValue(fields()[8]);
        record.steps = fieldSetFlags()[9] ? this.steps : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Recipe>
    WRITER$ = (org.apache.avro.io.DatumWriter<Recipe>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Recipe>
    READER$ = (org.apache.avro.io.DatumReader<Recipe>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










